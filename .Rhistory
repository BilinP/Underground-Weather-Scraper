# Convert start date and end date to Date objects
startdate <- as.Date(startdate)
enddate <- as.Date(enddate)
# Create a sequence of dates
date_sequence <- seq(startdate, enddate, by = "day")
# Iterate through each date
for (date in date_sequence) {
print(date_sequence)
# Do whatever you want with each date inside the loop
}
# Define start date and end date
startdate <- "2024-01-01"
enddate <- "2024-01-10"
# Convert start date and end date to Date objects
startdate <- as.Date(startdate)
enddate <- as.Date(enddate)
# Create a sequence of dates
date_sequence <- seq(startdate, enddate, by = "day")
# Iterate through each date
for (date in date_sequence) {
print(date_sequence)
print("hi")
# Do whatever you want with each date inside the loop
}
# Define start date and end date
startdate <- "2024-01-01"
enddate <- "2024-01-10"
# Convert start date and end date to Date objects
startdate <- as.Date(startdate)
enddate <- as.Date(enddate)
# Create a sequence of dates
date_sequence <- seq(startdate, enddate, by = "day")
# Iterate through each date
for (date in date_sequence) {
print(date)
print("hi")
# Do whatever you want with each date inside the loop
}
{
print(paste(days[i],"T12:00:00", sep=""))
}
days <- seq(from=as.Date('2011-02-01'), to=as.Date("2011-03-02"),by='days' )
for ( i in seq_along(days) )
{
print(paste(days[i],"T12:00:00", sep=""))
}
library(RSelenium)
library(rvest)
library(netstat)
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
get_weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
print(dates)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, d[i])
print(url)
print(d[i])
remDr$navigate(url)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)    #h1 span:nth-child(1)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to colum
parts <- unlist(strsplit(url, "/"))
location <- parts[4]
date <- c(d)
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
final <- as.data.frame(final)
}
}
remDr$close()
}
get_weather_data("2024-2-20","2024-2-22")
library(RSelenium)
library(rvest)
library(netstat)
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
get_weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
print(url)
print(dates[i])
remDr$navigate(url)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)    #h1 span:nth-child(1)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to colum
parts <- unlist(strsplit(url, "/"))
location <- parts[4]
date <- c(d)
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
final <- as.data.frame(final)
}
}
remDr$close()
}
get_weather_data("2024-2-20","2024-2-22")
get_weather_data("2024-2-20","2024-2-22")
library(RSelenium)
library(rvest)
library(netstat)
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
get_weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
print(url)
print(dates[i])
remDr$navigate(url)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)    #h1 span:nth-child(1)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to colum
parts <- unlist(strsplit(url, "/"))
location <- parts[4]
date <- c(d)
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
final <- as.data.frame(final)
}
}
remDr$close()
}
get_weather_data("2024-2-20","2024-2-22")
get_weather_data("2024-2-20","2024-2-22")
library(RSelenium)
library(rvest)
library(netstat)
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
get_weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
print(url)
print(dates[i])
remDr$navigate(url)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)    #h1 span:nth-child(1)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to colum
parts <- unlist(strsplit(url, "/"))
location <- parts[4]
date <- c(dates[i])
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
final <- as.data.frame(final)
}
}
remDr$close()
}
get_weather_data("2024-2-20","2024-2-22")
library(RSelenium)
library(rvest)
library(netstat)
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
get_weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
print(url)
print(dates[i])
remDr$navigate(url)
Sys.sleep(2)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)    #h1 span:nth-child(1)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to colum
parts <- unlist(strsplit(url, "/"))
location <- parts[4]
date <- c(dates[i])
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
final <- as.data.frame(final)
}
}
remDr$close()
}
get_weather_data("2024-2-20","2024-2-22")
weatherData <- read.csv("C:/Users/bilin/Desktop/weatherData.csv")
View(weatherData)
library(RSelenium)
library(rvest)
library(netstat)
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
get_weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
print(url)
print(dates[i])
remDr$navigate(url)
Sys.sleep(2)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)    #h1 span:nth-child(1)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to colum
parts <- unlist(strsplit(url, "/"))
location <- parts[4]
date <- c(dates[i])
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
final <- as.data.frame(final)
}
}
remDr$close()
}
get_weather_data("2024-2-20","2024-2-22")
View(weatherData)
tables<-html_table(htmlread)[[1]]
View(urls)
library(RSelenium)
library(rvest)
library(netstat)
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
get_weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
print(url)
print(dates[i])
remDr$navigate(url)
Sys.sleep(5)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)    #h1 span:nth-child(1)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to colum
parts <- unlist(strsplit(url, "/"))
location <- parts[4]
date <- c(dates[i])
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
final <- as.data.frame(final)
return(final)
}
}
remDr$close()
}
library(RSelenium)
library(rvest)
library(netstat)
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
get_weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
print(url)
print(dates[i])
remDr$navigate(url)
Sys.sleep(5)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)    #h1 span:nth-child(1)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to colum
parts <- unlist(strsplit(url, "/"))
location <- parts[4]
date <- c(dates[i])
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
weatherData <- as.data.frame(final)
}
}
remDr$close()
return(weatherData)
}
get_weather_data("2024-2-20","2024-2-22")
#library needed for project
library(RSelenium)
library(rvest)
library(netstat)
#list of urls below
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
#function which takes in a startdate and enddate which create a table with data.
#make sure dates input for the parameter is in the form of year-month-day ex. "2024-2-23"
#example call get_weather_data<-function("2024-2-20","2024-2-23")
weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
remDr$navigate(url)
Sys.sleep(5)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to column and column to rows.
parts <- unlist(strsplit(url, "/"))# split the url by each /
location <- parts[8] #uses the 8th part which holds the location
date <- c(dates[i]) #uses the current date.
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
weatherData <- as.data.frame(final)
}
}
remDr$close()
return(weatherData)
}
weather_data("2024-2-20","2024-2-22")
#library needed for project
library(RSelenium)
library(rvest)
library(netstat)
#list of urls below
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
#function which takes in a startdate and enddate which create a table with data.
#make sure dates input for the parameter is in the form of year-month-day ex. "2024-2-23"
#example call get_weather_data<-function("2024-2-20","2024-2-23")
weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
remDr$navigate(url)
Sys.sleep(5)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to column and column to rows.
parts <- unlist(strsplit(url, "/"))# split the url by each /
location <- parts[8] #uses the 8th part which holds the location
date <- c(dates[i]) #uses the current date.
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
weatherData <- as.data.frame(final)
}
}
remDr$close()
return(weatherData)
}
weather_data("2024-2-20","2024-2-22")
#library needed for project
library(RSelenium)
library(rvest)
library(netstat)
#list of urls below
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
weatherData<-read.csv(file.path("Template","weatherData"))
setwd("C:/Users/bilin/Desktop/WebScrapper")
#library needed for project
library(RSelenium)
library(rvest)
library(netstat)
#list of urls below
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
weatherData<-read.csv(file.path("Template","weatherData"))
#library needed for project
library(RSelenium)
library(rvest)
library(netstat)
#list of urls below
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
weatherData<-read.csv(file.path("Template","weatherData.csv"))
#library needed for project
library(RSelenium)
library(rvest)
library(netstat)
#list of urls below
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
weatherData<-read.csv(file.path("Template","weatherData.csv"))
#library needed for project
library(RSelenium)
library(rvest)
library(netstat)
#list of urls below
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
weatherData<-read.csv(file.path("Template","weatherData.csv"))
#function which takes in a startdate and enddate which create a table with data.
#make sure dates input for the parameter is in the form of year-month-day ex. "2024-2-23"
#example call get_weather_data<-function("2024-2-20","2024-2-23")
weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
remDr$navigate(url)
Sys.sleep(5)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to column and column to rows.
parts <- unlist(strsplit(url, "/"))# split the url by each /
location <- parts[8] #uses the 8th part which holds the location
date <- c(dates[i]) #uses the current date.
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
weatherData <- as.data.frame(final)
write.csv(weatherData, "weatherData", append = TRUE, row.names = FALSE)
}
}
remDr$close()
remDr$server$stop()
return(weatherData)
}
weather_data("2024-2-20","2024-2-22")
remDr$server$stop()
remDr$close()
#library needed for project
library(RSelenium)
library(rvest)
library(netstat)
#list of urls below
urls<-list("https://www.wunderground.com/history/daily/us/ca/burbank/KBUR/date/", "https://www.wunderground.com/history/daily/us/ca/reseda/KBUR/date/")
weatherData<-read.csv(file.path("Template","weatherData.csv"))
#function which takes in a startdate and enddate which create a table with data.
#make sure dates input for the parameter is in the form of year-month-day ex. "2024-2-23"
#example call get_weather_data<-function("2024-2-20","2024-2-23")
weather_data<-function(startdate,enddate){
remote<-rsDriver(browser = "chrome",chromever="122.0.6261.69",verbose = FALSE,port=free_port())
remDr <- remote[["client"]]
dates <- seq(as.Date(startdate), as.Date(enddate), by=1)
for(u in urls){
for(i in seq_along(dates)){
url = paste0(u, dates[i])
remDr$navigate(url)
Sys.sleep(5)
html<-remDr$getPageSource()[[1]]
htmlread<-read_html(html)
tables<-html_table(htmlread)[[1]]
#clean data
clean_data <- tables[-c(15,12,7,1,5,17:22),-c(1,3:5) ] #remove rows: 15,12,7,1,5,17-22, column: 1 , 3-5
flip<-t(clean_data) #transpose the data from rows to column and column to rows.
parts <- unlist(strsplit(url, "/"))# split the url by each /
location <- parts[8] #uses the 8th part which holds the location
date <- c(dates[i]) #uses the current date.
# Create a new data frame with the new columns added in front of the existing columns
new_data <- data.frame(date, location, flip)
final <- rbind(as.matrix(weatherData), as.matrix(new_data))
# Convert the result back to a data frame
weatherData <- as.data.frame(final)
write.csv(weatherData, "weatherData", append = TRUE, row.names = FALSE)
}
}
remDr$close()
remDr$server$stop()
return(weatherData)
}
weather_data("2024-2-20","2024-2-22")
